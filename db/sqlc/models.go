// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type Challenge struct {
	ID          pgtype.UUID      `json:"id"`
	Title       string           `json:"title"`
	UserID      pgtype.UUID      `json:"user_id"`
	Description pgtype.Text      `json:"description"`
	StartDate   pgtype.Date      `json:"start_date"`
	EndDate     pgtype.Date      `json:"end_date"`
	Active      pgtype.Bool      `json:"active"`
	CreatedAt   pgtype.Timestamp `json:"created_at"`
}

type ChallengeEntry struct {
	ID          pgtype.UUID      `json:"id"`
	ChallengeID pgtype.UUID      `json:"challenge_id"`
	Date        pgtype.Date      `json:"date"`
	Completed   pgtype.Bool      `json:"completed"`
	CreatedAt   pgtype.Timestamp `json:"created_at"`
}

type CurrentChallengesView struct {
	ID          pgtype.UUID      `json:"id"`
	Title       string           `json:"title"`
	UserID      pgtype.UUID      `json:"user_id"`
	Description pgtype.Text      `json:"description"`
	StartDate   pgtype.Date      `json:"start_date"`
	EndDate     pgtype.Date      `json:"end_date"`
	Active      pgtype.Bool      `json:"active"`
	CreatedAt   pgtype.Timestamp `json:"created_at"`
	Duration    interface{}      `json:"duration"`
}

type SchemaMigration struct {
	Version int64 `json:"version"`
	Dirty   bool  `json:"dirty"`
}

type Task struct {
	ID          pgtype.UUID     `json:"id"`
	TaskDayID   pgtype.UUID     `json:"task_day_id"`
	Title       string          `json:"title"`
	Description pgtype.Text     `json:"description"`
	Duration    pgtype.Interval `json:"duration"`
	Completed   pgtype.Bool     `json:"completed"`
}

type TaskDay struct {
	ID            pgtype.UUID     `json:"id"`
	UserID        pgtype.UUID     `json:"user_id"`
	Date          pgtype.Date     `json:"date"`
	Count         pgtype.Int4     `json:"count"`
	TotalDuration pgtype.Interval `json:"total_duration"`
}

type User struct {
	ID        pgtype.UUID      `json:"id"`
	Email     string           `json:"email"`
	Name      string           `json:"name"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
	UpdatedAt pgtype.Timestamp `json:"updated_at"`
	Timezone  string           `json:"timezone"`
}
